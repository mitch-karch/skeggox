flowchart LR
    %% @config{config.json}
    subgraph mbp["User Input Device"]
        direction LR
        %%Keyboard("<img width='80' src='https://static.thenounproject.com/png/91947-200.png' /><br>USB<br/> Keyboard")

        html-input("<img width='80'; src='https://static.thenounproject.com/png/2472836-200.png'/> <br> Webpage <br/> User Input")

        %%Keyboard --User Marked\n Score--> html-input
    end



    subgraph rpi["Raspberry Pi Zero"]
        direction LR

        Camera("<img width='80' src='https://static.thenounproject.com/png/589767-200.png' /><br>CSI<br/> Camera")
        terminal("<img width='80' src='https://static.thenounproject.com/png/2153153-200.png' /><br>Terminal<br/> RaspiVid")

        gstreamer-pipeline-rpi("<img width='80'; src='https://i.imgur.com/SYN5dLQ.png'/> <br> GStreamer <br/> UDP Pipeline")


        Camera --> terminal
        terminal --> gstreamer-pipeline-rpi

    end

    subgraph jetson["Nvidia Jetson Edge Device"]


        flask-server("<img width='80' src='https://flask.palletsprojects.com/en/2.0.x/_static/flask-icon.png' /><br> Python <br/> Flask Server")
        open-cv("<img width='80' src='https://opencv.org/wp-content/uploads/2020/07/OpenCV_logo_no_text_.png' /><br> Python <br/> Open CV Capture")
        gstreamer-pipeline-jetson("<img width='80'; src='https://i.imgur.com/SYN5dLQ.png'/> <br> GStreamer <br/> UDP Pipeline")
        drive("<img src='https://static.thenounproject.com/png/965901-200.png'; width='80'/><br>Storage<br/>Labelled Images ") 

        %%https://cdn.iconscout.com/icon/free/png-256/python-3628999-3030224.png
        

        gstreamer-pipeline-rpi --> gstreamer-pipeline-jetson
        gstreamer-pipeline-jetson --> open-cv
        open-cv --> flask-server
        flask-server --> drive

        html-input <----> flask-server
        %%kubConfig("<img src='https://cdn2.iconfinder.com/data/icons/mixd/512/20_kubernetes-512.png'; width='80'/><br>Kubernetes<br/> Configuration Yaml") 
        %%kubConfig --> KubNV
        %%kubedgeervice("<img src='https://static.thenounproject.com/png/2040656-200.png'; width='80'/><br>Kubernetes<br/> Service Deployment") 
    end





classDef container fill:#0db7ed,stroke:#444444,stroke-width:2px
classDef kuber fill:#9db8e9,stroke:#444444,stroke-width:2px
classDef nv fill:#76B900,stroke:#444444,stroke-width:3px
classDef raspbi fill:#f57fa1,stroke:#444444,stroke-width:3px
classDef apple fill:#dadad8,stroke:#444444,stroke-width:3px
classDef az fill:#FF9900,stroke:#444444,stroke-width:3px

class face,client-mqtt,mqtt-listen,mqtt-forward,cloud-mqtt,cloud-Render,input-container,camera-container container;
class KubCl,KubNV kuber;
class jetson nv;
class rpi raspbi;
class mbp apple;
class aws az;

linkStyle default stroke:#000,stroke-width:4px;